#!groovy

properties([
    [
        $class       : 'GithubProjectProperty',
        displayName  : 'Judicial UI Web App',
        projectUrlStr: 'https://github.com/hmcts/rpa-jui-webapp/'
    ],
    pipelineTriggers([
        cron('H 05 * * *')
    ]),
    parameters([
            string(name: 'URL_TO_TEST', defaultValue: 'https://jui-webapp-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
             string(name: 'JUI_EMAIL', defaultValue: '', description: 'The EMAIL you want to run these tests against'),
             string(name: 'JUI_PASSWORD', defaultValue: '', description: 'The PASSWORD you want to run these tests against'),
             string(name: 'FR_EMAIL', defaultValue: '', description: 'The EMAIL you want to run these tests against'),
             string(name: 'FR_PASSWORD', defaultValue: '', description: 'The PASSWORD you want to run these tests against')

])

])

@Library("Infrastructure")

def type = "nodejs"
def product = "jui"
def component = "webapp"

def channel = '#jui-pipeline'




List<LinkedHashMap<String, Object>> secrets = [
    secret('test-email', 'TEST_EMAIL'),
    secret('test-password', 'TEST_PASSWORD'),
    secret('jui-s2s-token', 'S2S_SECRET'),
    secret('jui-oauth2-token', 'IDAM_SECRET'),
    secret('fr-email', 'FR_EMAIL'),
    secret('fr-password', 'FR_PASSWORD')
]




static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {
    enableSlackNotifications(channel)
    loadVaultSecrets(secrets)
    setVaultName('rpa-aat')

//    enablePerformanceTest(15)
//    enableApiGatewayTest(15)
//    enableFullFunctionalTest(30)
//    enableMutationTest(120)
    enableCrossBrowserTest(120)
    enableDockerBuild()
    enableDeployToAKS()

    env.TEST_URL = params.URL_TO_TEST
    env.TEST_EMAIL = params.JUI_EMAIL
    env.TEST_PASSWORD = params.JUI_PASSWORD
    env.FR_EMAIL = params.FR_EMAIL
    env.FR_PASSWORD = params.FR_PASSWORD

    after('checkout') {
    sh 'yarn cache clean'}

    after('build') {
    sh 'npm run build'
    }

     after('crossBrowserTest') {
       steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
     }

}
